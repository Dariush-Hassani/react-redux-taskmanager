{"version":3,"sources":["Redux/Actions/TaskActions.js","Redux/Actions/CreateEditModalActions.js","Components/_StyledComponents.jsx","Components/CreateAndEditModal.jsx","Components/CreateTask.jsx","Config.js","Components/TaskItem.jsx","Redux/Actions/TaskInfoModalActions.js","Components/DoneTasks.jsx","Components/TaskInfoModal.jsx","Components/TasksList.jsx","Pages/HomePage.jsx","reportWebVitals.js","Redux/Reducers/CreateEditModalReducer.js","Redux/Reducers/TaskReducer.js","Redux/Reducers/TaskinfoModalReducer.js","Redux/RootReducer.js","Redux/Store.js","index.js"],"names":["doneTask","id","type","payload","openModalForEdit","orange","green","blue","red","OrangeButton","styled","Button","color","backgroundColor","GreenButton","BlueButton","RedButton","CircleFixedButton","Fab","position","bottom","right","CenterFlexBox","Box","display","justifyContent","TaskListBox","marginTop","border","borderColor","padding","borderRadius","cursor","CenterTypography","Typography","textAlign","DescriptionTypography","fontsize","CircleBox","width","height","marginLeft","top","FlexEndBox","DoneTaskIcon","DoneOutlinedIcon","CustomDialogTitle","DialogTitle","CreateEditModal","useState","open","setOpen","title","setTitle","titleValidation","setTitleValidation","desc","setDesc","descValidation","setDescValidation","gifts","setGifts","giftsValidation","setGiftsValidation","done","setDone","priority","setPriority","dispatch","useDispatch","modalState","useSelector","state","createEditModal","tasks","closeDialog","useEffect","isOpen","isEdit","task","find","x","editTaskId","Dialog","onClose","DialogContent","Stack","spacing","sx","TextField","autoFocus","label","fullWidth","error","helperText","variant","value","onChange","e","target","trim","length","multiline","rows","RadioGroup","aria-label","name","row","defaultValue","parseInt","FormControlLabel","control","Radio","DialogActions","onClick","validate","validation","map","sort","editTask","addTask","CreateTask","taskLength","PriorityEnum","TaskItem","haveActions","tagName","fontSize","substr","direction","DoneTasks","doneTasks","setDoneTasks","filter","index","TaskInfoModal","setTask","taskId","marginRight","TasksList","HomePage","Container","maxWidth","paddingBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","RootReducer","combineReducers","action","newTasks","findIndex","Store","createStore","window","devToolsExtension","f","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"2RAcMA,EAAW,SAACC,GAChB,MAAO,CACLC,KAAM,YACNC,QAASF,I,QCZPG,EAAmB,SAACH,GACxB,MAAO,CACLC,KAAM,2BACNC,QAASF,I,8DCJTI,EAAkB,UAAlBA,EAAyC,UACzCC,EAAiB,UAAjBA,EAAwC,UACxCC,EAAgB,UAAhBA,EAAuC,UACvCC,EAAe,MAAfA,EAAkC,UAIzBC,EAAeC,YAAOC,IAAPD,EAAe,iBAAO,CAChDE,MAAO,QACPC,gBAAiBR,EACjB,UAAW,CACTQ,gBAAiBR,OAIRS,EAAcJ,YAAOC,IAAPD,EAAe,iBAAO,CAC/CE,MAAO,QACPC,gBAAiBP,EACjB,UAAW,CACTO,gBAAiBP,OAIRS,EAAaL,YAAOC,IAAPD,EAAe,iBAAO,CAC9CE,MAAO,QACPC,gBAAiBN,EACjB,UAAW,CACTM,gBAAiBN,OAIRS,EAAYN,YAAOC,IAAPD,EAAe,iBAAO,CAC7CE,MAAO,QACPC,gBAAiBL,EACjB,UAAW,CACTK,gBAAiBL,OAIRS,EAAoBP,YAAOQ,IAAPR,EAAY,iBAAO,CAClDE,MAAO,QACPC,gBAAiBR,EACjB,UAAW,CACTQ,gBAAiBR,GAEnBc,SAAU,QACVC,OAAQ,OACRC,MAAO,WAGIC,EAAgBZ,YAAOa,IAAPb,EAAY,iBAAO,CAC9Cc,QAAS,OACTC,eAAgB,aAGLC,EAAchB,YAAOa,IAAPb,EAAY,iBAAO,CAC5Cc,QAAS,OACTC,eAAgB,gBAChBE,UAAW,OACXC,OAAQ,YACRC,YAxDU,UAyDVC,QAAS,YACTC,aAAc,MACdC,OAAQ,cAGGC,EAAmBvB,YAAOwB,IAAPxB,EAAmB,iBAAO,CACxDyB,UAAW,aAGAC,EAAwB1B,YAAOwB,IAAPxB,EAAmB,iBAAO,CAC7D2B,SAAU,GACVzB,MAnES,WAsEE0B,EAAY5B,YAAOwB,IAAPxB,EAAmB,iBAAO,CACjDc,QAAS,eACTe,MAAO,OACPC,OAAQ,OACRT,aAAc,MACdU,WAAY,MACZtB,SAAU,WACVuB,IAAK,UAGMC,EAAajC,YAAOa,IAAPb,EAAY,iBAAO,CAC3Cc,QAAS,OACTC,eAAgB,eAGLmB,EAAelC,YAAOmC,IAAPnC,EAAyB,iBAAO,CAC1DG,gBAAiBP,EACjByB,aAAc,OACdQ,MAAO,OACPC,OAAQ,OACR5B,MAAO,YAGIkC,EAAoBpC,YAAOqC,IAAPrC,EAAoB,iBAAO,CAC1D,4BAA6B,CAC3B6B,MAAO,SAET,kDAAmD,CACjDA,MAAO,SAET,4BAA6B,CAC3BA,MAAO,a,OC2FIS,MAvLf,WAA4B,IAAD,EACDC,oBAAS,GADR,mBAClBC,EADkB,KACZC,EADY,OAECF,mBAAS,KAFV,mBAElBG,EAFkB,KAEXC,EAFW,OAGqBJ,mBAAS,MAH9B,mBAGlBK,EAHkB,KAGDC,EAHC,OAIDN,mBAAS,IAJR,mBAIlBO,EAJkB,KAIZC,EAJY,OAKmBR,mBAAS,MAL5B,mBAKlBS,EALkB,KAKFC,EALE,OAMCV,mBAAS,IANV,mBAMlBW,EANkB,KAMXC,EANW,OAOqBZ,mBAAS,MAP9B,mBAOlBa,EAPkB,KAODC,EAPC,OAQDd,oBAAS,GARR,mBAQlBe,EARkB,KAQZC,EARY,OASOhB,mBAAS,GAThB,mBASlBiB,EATkB,KASRC,EATQ,KAYnBC,EAAWC,cACXC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,mBAC1CC,EAAQH,aAAY,SAACC,GAAD,OAAWA,EAAME,MAAMA,SAG3CC,EAAc,WAClBxB,GAAQ,GACRE,EAAS,IACTI,EAAQ,IACRI,EAAS,IACTN,EAAmB,MACnBI,EAAkB,MAClBI,EAAmB,MACnBI,EAAY,GACZF,GAAQ,GACJf,GAAMkB,EFjCL,CACLlE,KAAM,2BEiHR,OAjBA0E,qBAAU,WACR,GAAIN,EAAWO,QAGb,GAhEF1B,GAAQ,GAgEFmB,EAAWQ,OAAQ,CACrB,IAAIC,EAAOL,EAAMM,MAAK,SAACC,GAAD,OAAOA,EAAEhF,KAAOqE,EAAWY,cACjD7B,EAAS0B,EAAK3B,OACdK,EAAQsB,EAAKvB,MACbK,EAASkB,EAAKnB,OACdO,EAAYY,EAAKb,UACjBD,EAAQc,EAAKf,YAGfW,MAED,CAACL,IAGF,mCACE,eAACa,EAAA,EAAD,CAAQjC,KAAMA,EAAMkC,QAAST,EAA7B,UACE,cAAC7B,EAAD,UACGwB,EAAWQ,OAAX,eAEKJ,EAAMM,MAAK,SAACC,GAAD,OAAOA,EAAEhF,KAAOqE,EAAWY,cAAY9B,MAFvD,SAIG,sBAEN,eAACiC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAOC,QAAS,EAAGC,GAAI,CAAE7D,UAAW,GAApC,UACE,cAAC8D,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,aACNC,WAAS,EACTC,MAA2B,OAApBvC,EACPwC,WAAgC,OAApBxC,EAA2B,GAAKA,EAC5CyC,QAAQ,WACRC,MAAO5C,EACP6C,SAvDQ,SAACC,GACnB7C,EAAS6C,EAAEC,OAAOH,OACdE,EAAEC,OAAOH,MAAMI,OAAOC,OAAS,GAAG9C,EAAmB,SAuDjD,cAACkC,EAAA,EAAD,CACEE,MAAM,mBACNC,WAAS,EACTC,MAA0B,OAAnBnC,EACPoC,WAA+B,OAAnBpC,EAA0B,GAAKA,EAC3CqC,QAAQ,WACRO,WAAS,EACTC,KAAM,EACNP,MAAOxC,EACPyC,SA7DO,SAACC,GAClBzC,EAAQyC,EAAEC,OAAOH,OACbE,EAAEC,OAAOH,MAAMI,OAAOC,OAAS,GAAG1C,EAAkB,SA6DhD,cAAC8B,EAAA,EAAD,CACEE,MAAM,iBACNC,WAAS,EACTC,MAA2B,OAApB/B,EACPgC,WAAgC,OAApBhC,EAA2B,GAAKA,EAC5CiC,QAAQ,WACRC,MAAOpC,EACPqC,SAjEQ,SAACC,GACnBrC,EAASqC,EAAEC,OAAOH,OACdE,EAAEC,OAAOH,MAAMI,OAAOC,OAAS,GAAGtC,EAAmB,YAmEnD,eAACyC,EAAA,EAAD,CACEC,aAAW,SACXC,KAAK,iCACLC,KAAG,EACHnB,GAAI,CAAE7D,UAAW,GACjBiF,aAAc,EACdZ,MAAO9B,EACP+B,SAvEa,SAACC,GAAD,OAAO/B,EAAY0C,SAASX,EAAEC,OAAOH,SAgEpD,UASE,cAACc,EAAA,EAAD,CAAkBd,MAAO,EAAGe,QAAS,cAACC,EAAA,EAAD,IAAWrB,MAAM,QACtD,cAACmB,EAAA,EAAD,CAAkBd,MAAO,EAAGe,QAAS,cAACC,EAAA,EAAD,IAAWrB,MAAM,WACtD,cAACmB,EAAA,EAAD,CAAkBd,MAAO,EAAGe,QAAS,cAACC,EAAA,EAAD,IAAWrB,MAAM,eAG1D,eAACsB,EAAA,EAAD,WACE,cAACtG,EAAA,EAAD,CAAQoF,QAAQ,WAAWnF,MAAM,QAAQsG,QAASvC,EAAlD,oBAGA,cAAChE,EAAA,EAAD,CACEoF,QAAQ,YACRnF,MAAM,UACNsG,QAzHe,WACvB,GAlBiB,WACjB,IAAIC,GAAW,EAaf,OAZ4B,IAAxB/D,EAAMgD,OAAOC,SACfc,GAAW,EACX5D,EAAmB,uBAEM,IAAvBC,EAAK4C,OAAOC,SACdc,GAAW,EACXxD,EAAkB,6BAEQ,IAAxBC,EAAMwC,OAAOC,SACfc,GAAW,EACXpD,EAAmB,uBAEdoD,EAIFC,GAAL,CACA,IAQIrC,EAAO,CAAE9E,GAPTqE,EAAWQ,OACRR,EAAWY,WACU,IAAjBR,EAAM2B,OACV,EAEA3B,EAAM2C,KAAI,SAACpC,GAAD,OAAOA,EAAEhF,MAAIqH,OAAO5C,EAAM2B,OAAS,GAAK,EAExCjD,QAAOI,OAAMI,QAAOM,WAAUF,QAE3CM,EAAWQ,OACbV,EH5EW,SAACW,GAChB,MAAO,CACL7E,KAAM,YACNC,QAAS4E,GGyEEwC,CAASxC,IAElBX,EHrFU,SAACW,GACf,MAAO,CACL7E,KAAM,WACNC,QAAS4E,GGkFEyC,CAAQzC,IAEnBJ,MAqGM,SAKGL,EAAWQ,OAAS,YAAc,0B,iBClKhC2C,EAzBI,WACjB,IAAMrD,EAAWC,cACXqD,EAAanD,aAAY,SAACC,GAAD,OAAWA,EAAME,MAAMA,MAAM2B,UAEtDmB,EAAU,WACdpD,EHVK,CACLlE,KAAM,gCGYR,OACE,mCACkB,IAAfwH,EACC,cAACpG,EAAD,CAAekE,GAAI,CAAE7D,UAAW,IAAhC,SACE,cAAClB,EAAD,CAAcsF,QAAQ,YAAYmB,QAASM,EAA3C,sCAKF,cAACvG,EAAD,CAAmBiG,QAASM,EAA5B,SACE,cAAC,IAAD,S,SCxBGG,GAAe,CAC1B,CAAE1H,GAAI,EAAGmD,MAAO,MAAOxC,MAAO,WAC9B,CAAEX,GAAI,EAAGmD,MAAO,SAAUxC,MAAO,WACjC,CAAEX,GAAI,EAAGmD,MAAO,OAAQxC,MAAO,QC0ElBgH,GA3DE,SAAC,GAA2B,IAAzB7C,EAAwB,EAAxBA,KAAM8C,EAAkB,EAAlBA,YAElB3D,EAAWyD,GAAa3C,MAAK,SAACC,GAAD,OAAOA,EAAEhF,KAAO8E,EAAKb,YAElDE,EAAWC,cAejB,OACE,eAAC3C,EAAD,CACE8D,GAAI,CAAE7D,UAAW,EAAGC,OAAQ,mBAC5BsF,QARkB,SAAChB,GAChB2B,GAAoC,WAArB3B,EAAEC,OAAO2B,SAC7B1D,ECjCK,CACLlE,KAAM,qBACNC,QD+B2B4E,EAAK9E,MAIhC,UAIE,eAACsB,EAAA,EAAD,WACE,cAACW,EAAA,EAAD,CAAY6D,QAAQ,KAApB,SAA0BhB,EAAK3B,QAC/B,cAAChB,EAAD,CAAuBoD,GAAI,CAAEuC,SAAU,GAAInH,MAAO,QAAlD,SACGmE,EAAKvB,KAAK4C,OAAOC,OAAS,GACvBtB,EAAKvB,KAAKwE,OAAO,EAAG,IAAM,OAC1BjD,EAAKvB,UAGb,eAACjC,EAAA,EAAD,WACE,eAACoB,EAAD,WACE,cAACT,EAAA,EAAD,CAAY6D,QAAQ,OAApB,gBAA4B7B,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAUd,QACtC,cAACd,EAAD,CAAWkD,GAAI,CAAE3E,gBAAe,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAUtD,YAE7CiH,EACC,eAACvC,EAAA,EAAD,CAAO2C,UAAU,MAAM1C,QAAS,EAAGC,GAAI,CAAE7D,UAAW,GAApD,UACGoD,EAAKf,KACJ,cAACpB,EAAD,IAEA,cAAC9B,EAAD,CAAaoG,QAhCZ,WACX9C,EAASpE,EAAS+E,EAAK9E,MA+BeuF,GAAI,CAAEhD,OAAQ,QAA1C,kBAKF,cAAC/B,EAAD,CAAcyG,QAzCX,WACX9C,EAAShE,EAAiB2E,EAAK9E,MAwCMuF,GAAI,CAAEhD,OAAQ,QAA3C,qBAKF,oCEJK0F,GArDG,WAAO,IAAD,EACEjF,oBAAS,GADX,mBACfC,EADe,KACTC,EADS,OAEYF,mBAAS,IAFrB,mBAEfkF,EAFe,KAEJC,EAFI,KAQhBzD,EAAc,WAClBxB,GAAQ,IAGJuB,EAAQH,aAAY,SAACC,GAAD,OAAWA,EAAME,MAAMA,SAMjD,OAJAE,qBAAU,WACRwD,EAAa,aAAI1D,EAAM2D,QAAO,SAACpD,GAAD,OAAOA,EAAEjB,YACtC,CAACU,IAGF,mCACGA,EAAM2B,OAAS,EACd,eAAC9E,EAAA,EAAD,CAAKiE,GAAI,CAAE7D,UAAW,GAAtB,UACE,cAACZ,EAAD,CAAYmG,QAlBD,WACjB/D,GAAQ,IAiBF,6BAEA,eAACgC,EAAA,EAAD,CAAQjC,KAAMA,EAAMkC,QAAST,EAA7B,UACE,cAAC7B,EAAD,yBACA,cAACuC,EAAA,EAAD,UACG8C,EAAU9B,OAAS,EAClB,mCACG8B,EAAUd,KAAI,SAACtC,EAAMuD,GACpB,OACE,cAAC,GAAD,CAAUvD,KAAMA,EAAkB8C,aAAa,GAApBS,QAKjC,cAACpG,EAAA,EAAD,2CAGJ,cAAC+E,EAAA,EAAD,UACE,cAACtG,EAAA,EAAD,CAAQoF,QAAQ,WAAWnF,MAAM,QAAQsG,QAASvC,EAAlD,2BAON,gCC8CO4D,GAjFO,WAAO,IAAD,EACFtF,oBAAS,GADP,mBACnBC,EADmB,KACbC,EADa,OAEFF,qBAFE,mBAEnB8B,EAFmB,KAEbyD,EAFa,KAKpBpE,EAAWC,cACXC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAM+D,iBAC1C7D,EAAQH,aAAY,SAACC,GAAD,OAAWA,EAAME,MAAMA,SAG3CR,EAAWyD,GAAa3C,MAAK,SAACC,GAAD,OAAOA,EAAEhF,MAAF,OAAS8E,QAAT,IAASA,OAAT,EAASA,EAAMb,aAOnDS,EAAc,WACdzB,GAAMkB,EFpCL,CACLlE,KAAM,wBEoCNiD,GAAQ,IA0BV,OARAyB,qBAAU,WACJN,EAAWO,QAxBf1B,GAAQ,GA0BNqF,EAAQ9D,EAAMM,MAAK,SAACC,GAAD,OAAOA,EAAEhF,KAAOqE,EAAWmE,YAE9C9D,MAED,CAACL,IAEF,8BACE,eAACa,EAAA,EAAD,CAAQjC,KAAMA,EAAMkC,QAAST,EAA7B,UACE,eAAC7B,EAAD,WACE,cAACvB,EAAA,EAAD,UACE,eAACU,EAAD,CAAkB8D,QAAQ,KAA1B,gCACehB,QADf,IACeA,OADf,EACeA,EAAM9E,GADrB,YAC2B8E,QAD3B,IAC2BA,OAD3B,EAC2BA,EAAM3B,MADjC,SAIF,eAAC7B,EAAA,EAAD,WACE,cAACe,EAAD,CAAWkD,GAAI,CAAE3E,gBAAe,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAUtD,SAC5C,cAACsB,EAAA,EAAD,CAAY6D,QAAQ,OAAOP,GAAI,CAAE/C,WAAY,GAA7C,gBACGyB,QADH,IACGA,OADH,EACGA,EAAUd,cAIjB,cAACiC,EAAA,EAAD,UACE,cAACnD,EAAA,EAAD,CAAYsD,GAAI,CAAE1D,QAAS,UAA3B,gBAAwCiD,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAMvB,SAEhD,eAACyD,EAAA,EAAD,YACO,OAAJlC,QAAI,IAAJA,OAAA,EAAAA,EAAMf,MACL,cAACpB,EAAD,CAAc4C,GAAI,CAAEkD,YAAa,UAEjC,cAAC5H,EAAD,CAAaoG,QA9CV,WACX9C,EAASpE,EAAS+E,EAAK9E,MA6Cf,kBAEF,cAACQ,EAAD,CAAcyG,QA5CT,WACXvC,IACAP,EAAShE,EAAiB2E,EAAK9E,MA0CzB,kBACA,cAACe,EAAD,CAAWkG,QAxCL,WACZ9C,ETnCK,CACLlE,KAAM,cACNC,QSiCoB4E,EAAK9E,KACzB0E,KAsCM,oBACA,cAAChE,EAAA,EAAD,CAAQoF,QAAQ,WAAWnF,MAAM,QAAQsG,QAASvC,EAAlD,4BC1EKgE,GAlBG,WAChB,IAAMjE,EAAQH,aAAY,SAACC,GAAD,OAAWA,EAAME,MAAMA,SAEjD,OACE,mCACGA,EAAM2B,OAAS,EACd,cAAC9E,EAAA,EAAD,UACGmD,EAAM2C,KAAI,SAACtC,EAAMuD,GAChB,OAAO,cAAC,GAAD,CAAUvD,KAAMA,EAAM8C,aAAa,GAAWS,QAIzD,gCCOOM,GAfE,WACf,OACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAAKtD,GAAI,CAAEuD,cAAe,GAA9C,UACE,cAAC9G,EAAD,CAAkBuD,GAAI,CAAE7D,UAAW,GAAKoE,QAAQ,KAAhD,yBAGA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QCPSiD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kBCPRQ,GAAe,CACnB5E,QAAQ,EACRC,QAAQ,EACRI,WAAY,GCHd,IAAMuE,GAAe,CACnB/E,MAAO,ICDT,IAAM+E,GAAe,CACnB5E,QAAQ,EACR4D,OAAQ,GCGV,IAMeiB,GANKC,aAAgB,CAClCjF,MFFa,WAAoD,IAA/BF,EAA8B,uDAAtBiF,GAAcG,EAAQ,uCAChE,GAAoB,aAAhBA,EAAO1J,KACT,OAAO,6BACFsE,GADL,IAEEE,MAAM,CAAEkF,EAAOzJ,SAAV,oBAAsBqE,EAAME,UAE9B,GAAoB,cAAhBkF,EAAO1J,KAAsB,CACtC,IAAI2J,EAAQ,aAAOrF,EAAME,OACrB4D,EAAQuB,EAASC,WAAU,SAAC7E,GAAD,OAAOA,EAAEhF,KAAO2J,EAAOzJ,QAAQF,MAE9D,OADA4J,EAASvB,GAASsB,EAAOzJ,QAClB,6BACFqE,GADL,IAEEE,MAAM,aAAKmF,KAER,GAAoB,cAAhBD,EAAO1J,KAAsB,CACtC,IAAI2J,EAAQ,aAAOrF,EAAME,OACrB4D,EAAQuB,EAASC,WAAU,SAAC7E,GAAD,OAAOA,EAAEhF,KAAO2J,EAAOzJ,WAEtD,OADA0J,EAASvB,GAAOtE,MAAO,EAChB,6BACFQ,GADL,IAEEE,MAAM,aAAKmF,KAER,GAAoB,gBAAhBD,EAAO1J,KAAwB,CACxC,IAAI2J,EAAQ,aAAOrF,EAAME,MAAM2D,QAAO,SAACpD,GAAD,OAAOA,EAAEhF,IAAM2J,EAAOzJ,YAC5D,OAAO,6BACFqE,GADL,IAEEE,MAAM,aAAKmF,KAGf,OAAOrF,GE1BPC,gBHDa,WAA+D,IAA/BD,EAA8B,uDAAtBiF,GAAcG,EAAQ,uCAC3E,MAAoB,+BAAhBA,EAAO1J,KACF,6BACFsE,GADL,IAEEK,QAAQ,EACRC,QAAQ,EACRI,WAAY,IAEW,6BAAhB0E,EAAO1J,KACT,6BACFsE,GADL,IAEEK,QAAQ,EACRC,QAAQ,EACRI,WAAY0E,EAAOzJ,UAEI,0BAAhByJ,EAAO1J,KACT,6BACFsE,GADL,IAEEK,QAAQ,EACRC,QAAQ,EACRI,WAAY,IAGTV,GGrBP+D,cDHa,WAA6D,IAA/B/D,EAA8B,uDAAtBiF,GAAcG,EAAQ,uCACzE,MAAoB,uBAAhBA,EAAO1J,KACF,6BACFsE,GADL,IAEEK,QAAQ,EACR4D,OAAQmB,EAAOzJ,UAEQ,wBAAhByJ,EAAO1J,KACT,6BACFsE,GADL,IAEEK,QAAQ,EACR4D,OAAQ,IAGLjE,KEfMuF,GADDC,aAAYN,GAAYO,OAAOC,kBAAoBD,OAAOC,oBAAsB,SAAAC,GAAC,OAAIA,ICKnGC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOR,GAAjB,SACE,cAAC,GAAD,QAGJS,SAASC,eAAe,SAG1BzB,O","file":"static/js/main.7b8fc94f.chunk.js","sourcesContent":["const addTask = (task) => {\r\n  return {\r\n    type: \"task/add\",\r\n    payload: task,\r\n  };\r\n};\r\n\r\nconst editTask = (task) => {\r\n  return {\r\n    type: \"task/edit\",\r\n    payload: task,\r\n  };\r\n};\r\n\r\nconst doneTask = (id) => {\r\n  return {\r\n    type: \"task/done\",\r\n    payload: id,\r\n  };\r\n};\r\n\r\nconst deleteTask = (id) => {\r\n  return {\r\n    type: \"task/delete\",\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport { addTask, editTask, doneTask, deleteTask };\r\n","const openModalForCreate = () => {\r\n  return {\r\n    type: \"createEditModal/openCreate\",\r\n  };\r\n};\r\nconst openModalForEdit = (id) => {\r\n  return {\r\n    type: \"createEditModal/openEdit\",\r\n    payload: id,\r\n  };\r\n};\r\nconst closeCreateEditModal = () => {\r\n  return {\r\n    type: \"createEditModal/close\",\r\n  };\r\n};\r\n\r\nexport { openModalForCreate, openModalForEdit, closeCreateEditModal };\r\n","import { Button, DialogTitle, Fab, Typography } from \"@mui/material\";\r\nimport { Box, styled } from \"@mui/system\";\r\nimport DoneOutlinedIcon from \"@mui/icons-material/DoneOutlined\";\r\n\r\nlet orange = { color: \"#ed9720\", hoverColor: \"#f58e00\" };\r\nlet green = { color: \"#71dd1b\", hoverColor: \"#52a114\" };\r\nlet blue = { color: \"#4a86e8\", hoverColor: \"#07398b\" };\r\nlet red = { color: \"red\", hoverColor: \"#f74d4d\" };\r\nlet black = \"#f0f0f0\";\r\nlet gray = \"gray\";\r\n\r\nexport const OrangeButton = styled(Button)(() => ({\r\n  color: \"white\",\r\n  backgroundColor: orange.color,\r\n  \"&:hover\": {\r\n    backgroundColor: orange.hoverColor,\r\n  },\r\n}));\r\n\r\nexport const GreenButton = styled(Button)(() => ({\r\n  color: \"white\",\r\n  backgroundColor: green.color,\r\n  \"&:hover\": {\r\n    backgroundColor: green.hoverColor,\r\n  },\r\n}));\r\n\r\nexport const BlueButton = styled(Button)(() => ({\r\n  color: \"white\",\r\n  backgroundColor: blue.color,\r\n  \"&:hover\": {\r\n    backgroundColor: blue.hoverColor,\r\n  },\r\n}));\r\n\r\nexport const RedButton = styled(Button)(() => ({\r\n  color: \"white\",\r\n  backgroundColor: red.color,\r\n  \"&:hover\": {\r\n    backgroundColor: red.hoverColor,\r\n  },\r\n}));\r\n\r\nexport const CircleFixedButton = styled(Fab)(() => ({\r\n  color: \"white\",\r\n  backgroundColor: orange.color,\r\n  \"&:hover\": {\r\n    backgroundColor: orange.hoverColor,\r\n  },\r\n  position: \"fixed\",\r\n  bottom: \"50px\",\r\n  right: \"50px\",\r\n}));\r\n\r\nexport const CenterFlexBox = styled(Box)(() => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nexport const TaskListBox = styled(Box)(() => ({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  marginTop: \"10px\",\r\n  border: \"1px solid\",\r\n  borderColor: black,\r\n  padding: \"10px 20px\",\r\n  borderRadius: \"8px\",\r\n  cursor: \"pointer\",\r\n}));\r\n\r\nexport const CenterTypography = styled(Typography)(() => ({\r\n  textAlign: \"center\",\r\n}));\r\n\r\nexport const DescriptionTypography = styled(Typography)(() => ({\r\n  fontsize: 13,\r\n  color: gray,\r\n}));\r\n\r\nexport const CircleBox = styled(Typography)(() => ({\r\n  display: \"inline-block\",\r\n  width: \"16px\",\r\n  height: \"16px\",\r\n  borderRadius: \"8px\",\r\n  marginLeft: \"5px\",\r\n  position: \"relative\",\r\n  top: \"4px\",\r\n}));\r\n\r\nexport const FlexEndBox = styled(Box)(() => ({\r\n  display: \"flex\",\r\n  justifyContent: \"flex-end\",\r\n}));\r\n\r\nexport const DoneTaskIcon = styled(DoneOutlinedIcon)(() => ({\r\n  backgroundColor: green.color,\r\n  borderRadius: \"15px\",\r\n  width: \"30px\",\r\n  height: \"30px\",\r\n  color: \"white\",\r\n}));\r\n\r\nexport const CustomDialogTitle = styled(DialogTitle)(() => ({\r\n  \"@media (max-width: 520px)\": {\r\n    width: \"260px\",\r\n  },\r\n  \"@media (min-width:520px) and (max-width: 670px)\": {\r\n    width: \"400px\",\r\n  },\r\n  \"@media (min-width: 670px)\": {\r\n    width: \"550px\",\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { addTask, editTask } from \"../Redux/Actions/TaskActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { closeCreateEditModal } from \"../Redux/Actions/CreateEditModalActions\";\r\nimport { CustomDialogTitle } from \"./_StyledComponents\";\r\n\r\nfunction CreateEditModal() {\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState(\" \");\r\n  const [titleValidation, setTitleValidation] = useState(null);\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [descValidation, setDescValidation] = useState(null);\r\n  const [gifts, setGifts] = useState(\"\");\r\n  const [giftsValidation, setGiftsValidation] = useState(null);\r\n  const [done, setDone] = useState(false);\r\n  const [priority, setPriority] = useState(0);\r\n\r\n  //redux\r\n  const dispatch = useDispatch();\r\n  const modalState = useSelector((state) => state.createEditModal);\r\n  const tasks = useSelector((state) => state.tasks.tasks);\r\n\r\n  //open and close modal and reset values\r\n  const closeDialog = () => {\r\n    setOpen(false);\r\n    setTitle(\"\");\r\n    setDesc(\"\");\r\n    setGifts(\"\");\r\n    setTitleValidation(null);\r\n    setDescValidation(null);\r\n    setGiftsValidation(null);\r\n    setPriority(0);\r\n    setDone(false);\r\n    if (open) dispatch(closeCreateEditModal());\r\n  };\r\n\r\n  const openDialog = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  //validations and create or edit task\r\n  const validation = () => {\r\n    let validate = true;\r\n    if (title.trim().length === 0) {\r\n      validate = false;\r\n      setTitleValidation(\"Please enter title\");\r\n    }\r\n    if (desc.trim().length === 0) {\r\n      validate = false;\r\n      setDescValidation(\"Please enter description\");\r\n    }\r\n    if (gifts.trim().length === 0) {\r\n      validate = false;\r\n      setGiftsValidation(\"Please enter gifts\");\r\n    }\r\n    return validate;\r\n  };\r\n\r\n  const createOrEditTask = () => {\r\n    if (!validation()) return;\r\n    let id = 0;\r\n    if (modalState.isEdit) {\r\n      id = modalState.editTaskId;\r\n    } else if (tasks.length === 0) {\r\n      id = 1;\r\n    } else {\r\n      id = tasks.map((x) => x.id).sort()[tasks.length - 1] + 1;\r\n    }\r\n    let task = { id, title, desc, gifts, priority, done };\r\n\r\n    if (modalState.isEdit) {\r\n      dispatch(editTask(task));\r\n    } else {\r\n      dispatch(addTask(task));\r\n    }\r\n    closeDialog();\r\n  };\r\n\r\n  //Form control events\r\n  const titleChange = (e) => {\r\n    setTitle(e.target.value);\r\n    if (e.target.value.trim().length > 0) setTitleValidation(null);\r\n  };\r\n\r\n  const descChange = (e) => {\r\n    setDesc(e.target.value);\r\n    if (e.target.value.trim().length > 0) setDescValidation(null);\r\n  };\r\n\r\n  const giftsChange = (e) => {\r\n    setGifts(e.target.value);\r\n    if (e.target.value.trim().length > 0) setGiftsValidation(null);\r\n  };\r\n\r\n  const priorityChange = (e) => setPriority(parseInt(e.target.value));\r\n\r\n  //Effects\r\n  useEffect(() => {\r\n    if (modalState.isOpen) {\r\n      openDialog();\r\n\r\n      if (modalState.isEdit) {\r\n        let task = tasks.find((x) => x.id === modalState.editTaskId);\r\n        setTitle(task.title);\r\n        setDesc(task.desc);\r\n        setGifts(task.gifts);\r\n        setPriority(task.priority);\r\n        setDone(task.done);\r\n      }\r\n    } else {\r\n      closeDialog();\r\n    }\r\n  }, [modalState]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={closeDialog}>\r\n        <CustomDialogTitle>\r\n          {modalState.isEdit\r\n            ? `Edit ${\r\n                tasks.find((x) => x.id === modalState.editTaskId).title\r\n              } Task`\r\n            : \"Create a new task\"}\r\n        </CustomDialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2} sx={{ marginTop: 2 }}>\r\n            <TextField\r\n              autoFocus\r\n              label=\"Task Title\"\r\n              fullWidth\r\n              error={titleValidation === null ? false : true}\r\n              helperText={titleValidation === null ? \"\" : titleValidation}\r\n              variant=\"outlined\"\r\n              value={title}\r\n              onChange={titleChange}\r\n            />\r\n            <TextField\r\n              label=\"Task description\"\r\n              fullWidth\r\n              error={descValidation === null ? false : true}\r\n              helperText={descValidation === null ? \"\" : descValidation}\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={5}\r\n              value={desc}\r\n              onChange={descChange}\r\n            />\r\n            <TextField\r\n              label=\"Gifts and KPIs\"\r\n              fullWidth\r\n              error={giftsValidation === null ? false : true}\r\n              helperText={giftsValidation === null ? \"\" : giftsValidation}\r\n              variant=\"outlined\"\r\n              value={gifts}\r\n              onChange={giftsChange}\r\n            />\r\n          </Stack>\r\n\r\n          <RadioGroup\r\n            aria-label=\"gender\"\r\n            name=\"controlled-radio-buttons-group\"\r\n            row\r\n            sx={{ marginTop: 1 }}\r\n            defaultValue={0}\r\n            value={priority}\r\n            onChange={priorityChange}\r\n          >\r\n            <FormControlLabel value={0} control={<Radio />} label=\"Low\" />\r\n            <FormControlLabel value={1} control={<Radio />} label=\"Medium\" />\r\n            <FormControlLabel value={2} control={<Radio />} label=\"High\" />\r\n          </RadioGroup>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"outlined\" color=\"error\" onClick={closeDialog}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={createOrEditTask}\r\n          >\r\n            {modalState.isEdit ? \"Edit Task\" : \"Add to tasks\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateEditModal;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CenterFlexBox, CircleFixedButton, OrangeButton } from \"./_StyledComponents\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { openModalForCreate } from \"../Redux/Actions/CreateEditModalActions\";\r\n\r\nconst CreateTask = () => {\r\n  const dispatch = useDispatch();\r\n  const taskLength = useSelector((state) => state.tasks.tasks.length);\r\n\r\n  const addTask = () => {\r\n    dispatch(openModalForCreate());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {taskLength === 0 ? (\r\n        <CenterFlexBox sx={{ marginTop: 25 }}>\r\n          <OrangeButton variant=\"contained\" onClick={addTask}>\r\n            Create your first task\r\n          </OrangeButton>\r\n        </CenterFlexBox>\r\n      ) : (\r\n        <CircleFixedButton onClick={addTask}>\r\n          <AddIcon />\r\n        </CircleFixedButton>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n","export const PriorityEnum = [\r\n  { id: 0, title: \"Low\", color: \"#71dd1b\" },\r\n  { id: 1, title: \"Medium\", color: \"#e5e510\" },\r\n  { id: 2, title: \"High\", color: \"red\" },\r\n];\r\n","import { Typography, Stack } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { PriorityEnum } from \"../Config\";\r\nimport { openModalForEdit } from \"../Redux/Actions/CreateEditModalActions\";\r\nimport { openTaskInfoModal } from \"../Redux/Actions/TaskInfoModalActions\";\r\nimport { doneTask } from \"../Redux/Actions/TaskActions\";\r\nimport {\r\n  CircleBox,\r\n  DescriptionTypography,\r\n  TaskListBox,\r\n  OrangeButton,\r\n  FlexEndBox,\r\n  GreenButton,\r\n  DoneTaskIcon,\r\n} from \"./_StyledComponents\";\r\n\r\nconst TaskItem = ({ task, haveActions }) => {\r\n  //Priority Info\r\n  const priority = PriorityEnum.find((x) => x.id === task.priority);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const edit = () => {\r\n    dispatch(openModalForEdit(task.id));\r\n  };\r\n\r\n  const done = () => {\r\n    dispatch(doneTask(task.id));\r\n  };\r\n\r\n  const openInfoModal = (e) => {\r\n    if (!haveActions || e.target.tagName === \"BUTTON\") return;\r\n    dispatch(openTaskInfoModal(task.id));\r\n  };\r\n\r\n  return (\r\n    <TaskListBox\r\n      sx={{ marginTop: 1, border: \"1px solid black\" }}\r\n      onClick={openInfoModal}\r\n    >\r\n      <Box>\r\n        <Typography variant=\"h6\">{task.title}</Typography>\r\n        <DescriptionTypography sx={{ fontSize: 13, color: \"gray\" }}>\r\n          {task.desc.trim().length > 50\r\n            ? task.desc.substr(0, 50) + \" ...\"\r\n            : task.desc}\r\n        </DescriptionTypography>\r\n      </Box>\r\n      <Box>\r\n        <FlexEndBox>\r\n          <Typography variant=\"span\">{priority?.title}</Typography>\r\n          <CircleBox sx={{ backgroundColor: priority?.color }}></CircleBox>\r\n        </FlexEndBox>\r\n        {haveActions ? (\r\n          <Stack direction=\"row\" spacing={1} sx={{ marginTop: 1 }}>\r\n            {task.done ? (\r\n              <DoneTaskIcon />\r\n            ) : (\r\n              <GreenButton onClick={done} sx={{ height: \"30px\" }}>\r\n                Done\r\n              </GreenButton>\r\n            )}\r\n\r\n            <OrangeButton onClick={edit} sx={{ height: \"30px\" }}>\r\n              Edit\r\n            </OrangeButton>\r\n          </Stack>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n    </TaskListBox>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","const openTaskInfoModal = (id) => {\r\n  return {\r\n    type: \"taskInfoModal/open\",\r\n    payload: id,\r\n  };\r\n};\r\nconst closeTaskInfoModal = () => {\r\n  return {\r\n    type: \"taskInfoModal/close\",\r\n  };\r\n};\r\n\r\nexport { openTaskInfoModal, closeTaskInfoModal };\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BlueButton, CustomDialogTitle } from \"./_StyledComponents\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nconst DoneTasks = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [doneTasks, setDoneTasks] = useState([]);\r\n\r\n  const openDialog = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const tasks = useSelector((state) => state.tasks.tasks);\r\n\r\n  useEffect(() => {\r\n    setDoneTasks([...tasks.filter((x) => x.done)]);\r\n  }, [tasks]);\r\n\r\n  return (\r\n    <>\r\n      {tasks.length > 0 ? (\r\n        <Box sx={{ marginTop: 5 }}>\r\n          <BlueButton onClick={openDialog}>View Done Tasks</BlueButton>\r\n\r\n          <Dialog open={open} onClose={closeDialog}>\r\n            <CustomDialogTitle>Done Tasks</CustomDialogTitle>\r\n            <DialogContent>\r\n              {doneTasks.length > 0 ? (\r\n                <>\r\n                  {doneTasks.map((task, index) => {\r\n                    return (\r\n                      <TaskItem task={task} key={index} haveActions={false} />\r\n                    );\r\n                  })}\r\n                </>\r\n              ) : (\r\n                <Typography>You have not any done task</Typography>\r\n              )}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button variant=\"outlined\" color=\"error\" onClick={closeDialog}>\r\n                Close\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoneTasks;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { PriorityEnum } from \"../Config\";\r\nimport { openModalForEdit } from \"../Redux/Actions/CreateEditModalActions\";\r\nimport { deleteTask, doneTask } from \"../Redux/Actions/TaskActions\";\r\nimport { closeTaskInfoModal } from \"../Redux/Actions/TaskInfoModalActions\";\r\nimport {\r\n  CenterTypography,\r\n  CircleBox,\r\n  CustomDialogTitle,\r\n  DoneTaskIcon,\r\n  GreenButton,\r\n  OrangeButton,\r\n  RedButton,\r\n} from \"./_StyledComponents\";\r\n\r\nconst TaskInfoModal = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [task, setTask] = useState();\r\n\r\n  //redux\r\n  const dispatch = useDispatch();\r\n  const modalState = useSelector((state) => state.TaskInfoModal);\r\n  const tasks = useSelector((state) => state.tasks.tasks);\r\n\r\n  //Priority Info\r\n  const priority = PriorityEnum.find((x) => x.id === task?.priority);\r\n\r\n  //Modal Actions\r\n  const openDialog = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    if (open) dispatch(closeTaskInfoModal());\r\n    setOpen(false);\r\n  };\r\n\r\n  const done = () => {\r\n    dispatch(doneTask(task.id));\r\n  };\r\n\r\n  const edit = () => {\r\n    closeDialog();\r\n    dispatch(openModalForEdit(task.id));\r\n  };\r\n\r\n  const delet = () => {\r\n    dispatch(deleteTask(task.id));\r\n    closeDialog();\r\n  };\r\n\r\n  //Effects\r\n  useEffect(() => {\r\n    if (modalState.isOpen) {\r\n      openDialog();\r\n      setTask(tasks.find((x) => x.id === modalState.taskId));\r\n    } else {\r\n      closeDialog();\r\n    }\r\n  }, [modalState]);\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={closeDialog}>\r\n        <CustomDialogTitle>\r\n          <Box>\r\n            <CenterTypography variant=\"h6\">\r\n              Task Number {task?.id} ({task?.title})\r\n            </CenterTypography>\r\n          </Box>\r\n          <Box>\r\n            <CircleBox sx={{ backgroundColor: priority?.color }}></CircleBox>\r\n            <Typography variant=\"span\" sx={{ marginLeft: 1 }}>\r\n              {priority?.title}\r\n            </Typography>\r\n          </Box>\r\n        </CustomDialogTitle>\r\n        <DialogContent>\r\n          <Typography sx={{ padding: \"0 10px\" }}>{task?.desc}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {task?.done ? (\r\n            <DoneTaskIcon sx={{ marginRight: \"10px\" }} />\r\n          ) : (\r\n            <GreenButton onClick={done}>Done</GreenButton>\r\n          )}\r\n          <OrangeButton onClick={edit}>Edit</OrangeButton>\r\n          <RedButton onClick={delet}>Delete</RedButton>\r\n          <Button variant=\"outlined\" color=\"error\" onClick={closeDialog}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskInfoModal;\r\n","import { Box } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nconst TasksList = () => {\r\n  const tasks = useSelector((state) => state.tasks.tasks);\r\n\r\n  return (\r\n    <>\r\n      {tasks.length > 0 ? (\r\n        <Box>\r\n          {tasks.map((task, index) => {\r\n            return <TaskItem task={task} haveActions={true} key={index} />;\r\n          })}\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n","import { Container } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport CreateEditModal from \"../Components/CreateAndEditModal\";\r\nimport CreateTask from \"../Components/CreateTask\";\r\nimport DoneTasks from \"../Components/DoneTasks\";\r\nimport { CenterTypography } from \"../Components/_StyledComponents\";\r\nimport TaskInfoModal from \"../Components/TaskInfoModal\";\r\nimport TasksList from \"../Components/TasksList\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ paddingBottom: 7 }}>\r\n      <CenterTypography sx={{ marginTop: 7 }} variant=\"h4\">\r\n        Hello World\r\n      </CenterTypography>\r\n      <CreateTask />\r\n      <CreateEditModal />\r\n      <DoneTasks />\r\n      <TasksList />\r\n      <TaskInfoModal />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  isOpen: false,\r\n  isEdit: false,\r\n  editTaskId: 0,\r\n};\r\n\r\nexport default function CreateEditModalReducer(state = initialState, action) {\r\n  if (action.type === \"createEditModal/openCreate\") {\r\n    return {\r\n      ...state,\r\n      isOpen: true,\r\n      isEdit: false,\r\n      editTaskId: 0,\r\n    };\r\n  } else if (action.type === \"createEditModal/openEdit\") {\r\n    return {\r\n      ...state,\r\n      isOpen: true,\r\n      isEdit: true,\r\n      editTaskId: action.payload,\r\n    };\r\n  } else if (action.type === \"createEditModal/close\") {\r\n    return {\r\n      ...state,\r\n      isOpen: false,\r\n      isEdit: false,\r\n      editTaskId: 0,\r\n    };\r\n  }\r\n  return state;\r\n}\r\n","const initialState = {\r\n  tasks: [],\r\n};\r\n\r\nexport default function TaskReducer(state = initialState, action) {\r\n  if (action.type === \"task/add\") {\r\n    return {\r\n      ...state,\r\n      tasks: [action.payload, ...state.tasks],\r\n    };\r\n  } else if (action.type === \"task/edit\") {\r\n    let newTasks = [...state.tasks];\r\n    let index = newTasks.findIndex((x) => x.id === action.payload.id);\r\n    newTasks[index] = action.payload;\r\n    return {\r\n      ...state,\r\n      tasks: [...newTasks],\r\n    };\r\n  } else if (action.type === \"task/done\") {\r\n    let newTasks = [...state.tasks];\r\n    let index = newTasks.findIndex((x) => x.id === action.payload);\r\n    newTasks[index].done = true;\r\n    return {\r\n      ...state,\r\n      tasks: [...newTasks],\r\n    };\r\n  } else if (action.type === \"task/delete\") {\r\n    let newTasks = [...state.tasks.filter((x) => x.id != action.payload)];\r\n    return {\r\n      ...state,\r\n      tasks: [...newTasks],\r\n    };\r\n  }\r\n  return state;\r\n}\r\n","const initialState = {\r\n  isOpen: false,\r\n  taskId: 0,\r\n};\r\n\r\nexport default function TaskinfoModalReducer(state = initialState, action) {\r\n  if (action.type === \"taskInfoModal/open\") {\r\n    return {\r\n      ...state,\r\n      isOpen: true,\r\n      taskId: action.payload,\r\n    };\r\n  } else if (action.type === \"taskInfoModal/close\") {\r\n    return {\r\n      ...state,\r\n      isOpen: false,\r\n      taskId: 0,\r\n    };\r\n  }\r\n  return state;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport CreateEditModalReducer from \"./Reducers/CreateEditModalReducer\";\r\nimport TaskReducer from \"./Reducers/TaskReducer\";\r\nimport TaskinfoModalReducer from \"./Reducers/TaskinfoModalReducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n  tasks: TaskReducer,\r\n  createEditModal: CreateEditModalReducer,\r\n  TaskInfoModal: TaskinfoModalReducer,\r\n});\r\n\r\nexport default RootReducer;\r\n","import { createStore} from 'redux';\r\nimport RootReducer from './RootReducer';\r\n\r\nconst Store = createStore(RootReducer,window.devToolsExtension ? window.devToolsExtension() : f => f);\r\nexport default Store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport HomePage from \"./Pages/HomePage\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./Redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <HomePage />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}